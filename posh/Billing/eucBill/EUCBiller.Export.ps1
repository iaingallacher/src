#------------------------------------------------------------------------
# Source File Information (DO NOT MODIFY)
# Source ID: 1871c987-121c-48fd-9270-2b3d301357e4
# Source File: C:\Users\igallacher\Documents\GitHub\src\posh\Billing\eucBill\EUCBiller.psf
#------------------------------------------------------------------------
#region File Recovery Data (DO NOT MODIFY)
<#RecoveryData:
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
AAA=#>
#endregion

<#
    .NOTES
    --------------------------------------------------------------------------------
     Code generated by:  SAPIEN Technologies, Inc., PowerShell Studio 2014 v4.1.63
     Generated on:       1/08/2014 10:14 AM
     Generated by:       iaingallacher
    --------------------------------------------------------------------------------
    .DESCRIPTION
        GUI script generated by PowerShell Studio 2014
#>
#----------------------------------------------
#region Application Functions
#----------------------------------------------

function OnApplicationLoad {
	#Note: This function is not called in Projects
	#Note: This function runs before the form is created
	#Note: To get the script directory in the Packager use: Split-Path $hostinvocation.MyCommand.path
	#Note: To get the console output in the Packager (Windows Mode) use: $ConsoleOutput (Type: System.Collections.ArrayList)
	#Important: Form controls cannot be accessed in this function
	#TODO: Add modules and custom code to validate the application load
	
	return $true #return true for success or false for failure
}

function OnApplicationExit {
	#Note: This function is not called in Projects
	#Note: This function runs after the form is closed
	#TODO: Add custom code to clean up and unload modules when the application exits
	
	$script:ExitCode = 0 #Set the exit code for the Packager
}

#endregion Application Functions

#----------------------------------------------
# Generated Form Function
#----------------------------------------------
function Call-EUCBiller_psf {

	#----------------------------------------------
	#region Import the Assemblies
	#----------------------------------------------
	[void][reflection.assembly]::Load('mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.DirectoryServices, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	[void][reflection.assembly]::Load('System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089')
	[void][reflection.assembly]::Load('System.ServiceProcess, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a')
	#endregion Import Assemblies

	#----------------------------------------------
	#region Generated Form Objects
	#----------------------------------------------
	[System.Windows.Forms.Application]::EnableVisualStyles()
	$frmEUCBiller = New-Object 'System.Windows.Forms.Form'
	$buttonCancel = New-Object 'System.Windows.Forms.Button'
	$buttonBack = New-Object 'System.Windows.Forms.Button'
	$buttonFinish = New-Object 'System.Windows.Forms.Button'
	$tabcontrolWizard = New-Object 'System.Windows.Forms.TabControl'
	$tabpageCSVFile = New-Object 'System.Windows.Forms.TabPage'
	$textFile = New-Object 'System.Windows.Forms.TextBox'
	$buttonBrowse = New-Object 'System.Windows.Forms.Button'
	$labelSelectCSVFile = New-Object 'System.Windows.Forms.Label'
	$tabpageBillPeriod = New-Object 'System.Windows.Forms.TabPage'
	$lblBillEnd = New-Object 'System.Windows.Forms.Label'
	$lblBillStart = New-Object 'System.Windows.Forms.Label'
	$dateEndBill = New-Object 'System.Windows.Forms.DateTimePicker'
	$dateStartBill = New-Object 'System.Windows.Forms.DateTimePicker'
	$chkUseDates = New-Object 'System.Windows.Forms.CheckBox'
	$tabpageBillData = New-Object 'System.Windows.Forms.TabPage'
	$lblFinish = New-Object 'System.Windows.Forms.Label'
	$richtextbox1 = New-Object 'System.Windows.Forms.RichTextBox'
	$buttonNext = New-Object 'System.Windows.Forms.Button'
	$ofdSelectFile = New-Object 'System.Windows.Forms.OpenFileDialog'
	$sfdExportXls = New-Object 'System.Windows.Forms.SaveFileDialog'
	$InitialFormWindowState = New-Object 'System.Windows.Forms.FormWindowState'
	#endregion Generated Form Objects

	#----------------------------------------------
	# User Generated Script
	#----------------------------------------------
	
	
	
	
	
	
	
	$global:dateminus30 = $false
	#-------------------------------------------------------
	# NOTE: When new TabPage added place the validation code
	# 		in the Validate-WizardPage function.
	#-------------------------------------------------------
	function Validate-WizardPage
	{
	<#
		Add TabPages and place the validation code in this function
	#>
		[OutputType([boolean])]
		param([System.Windows.Forms.TabPage]$tabPage)
		
		if($tabPage -eq $tabpageCSVFile)
		{
			#TODO: Enter Validation Code here for Step 1
			if(-not $textFile.Text)
			{
				return $false	
			}
			
			return $true
		}
		elseif ($tabPage -eq $tabpageBillPeriod)
		{
			#TODO: Enter Validation Code here for Step 2
			
			if ($global:dateminus30 -eq $false)
			{
				$dateStartBill.Value = $dateEndBill.Value.Date.AddDays(-30)
				$global:dateminus30 = $true
			}
			
			if($chkUseDates.Checked)
			{
				return $true
			}
			
			return $false
		}
		elseif ($tabPage -eq $tabpageBillData)
		{
			$billData = Load-File($textFile.Text)
			
			Process-Data($billData)
			
			if ($richtextbox1.TextLength -gt 0)
			{
				return $true
			}
			
			<#TODO: Enter Validation Code here for Step 3
			if(	$radiobuttonOption1.Checked -or
				$radiobuttonOption2.Checked -or
				$radiobuttonOption3.Checked)
			{
				return $true
			}#>
		}
		#Add more pages here
		
		return $false
	}
	
	
	
	
	
	#region Events and Functions
	$frmEUCBiller_Load={
		Update-NavButtons
	}
	
	function Update-NavButtons
	{
		<# 
			.DESCRIPTION
			Validates the current tab and Updates the Next, Prev and Finish buttons.
		#>
		$enabled = Validate-WizardPage $tabcontrolWizard.SelectedTab
		$buttonNext.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
		$buttonBack.Enabled = $tabcontrolWizard.SelectedIndex -gt 0
		$buttonFinish.Enabled = $enabled -and ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)	
		#Uncomment to Hide Buttons
		#$buttonNext.Visible = ($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
		#$buttonFinish.Visible = ($tabcontrolWizard.SelectedIndex -eq $tabcontrolWizard.TabCount - 1)
	}
	
	$script:DeselectedIndex = -1
	$tabcontrolWizard_Deselecting=[System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
		# Store the previous tab index
		$script:DeselectedIndex = $_.TabPageIndex
	}
	
	$tabcontrolWizard_Selecting=[System.Windows.Forms.TabControlCancelEventHandler]{
	#Event Argument: $_ = [System.Windows.Forms.TabControlCancelEventArgs]
		# We only validate if we are moving to the Next TabPage. 
		# Users can move back without validating
		if($script:DeselectedIndex -ne -1 -and $script:DeselectedIndex -lt $_.TabPageIndex)
		{
			#Validate each page until we reach the one we want
			for($index = $script:DeselectedIndex; $index -lt $_.TabPageIndex; $index++)
			{
				$_.Cancel = -not (Validate-WizardPage $tabcontrolWizard.TabPages[$index])
				
				if($_.Cancel) 
				{
					# Cancel and Return if validation failed.
					return;
				}
			}
		}
		
		Update-NavButtons
	}
	
	$buttonBack_Click={
		#Go to the previous tab page
		if($tabcontrolWizard.SelectedIndex -gt 0)
		{
			$tabcontrolWizard.SelectedIndex--
		}
	}
	
	$buttonNext_Click={	
		#Go to the next tab page
		if($tabcontrolWizard.SelectedIndex -lt $tabcontrolWizard.TabCount - 1)
		{
			$tabcontrolWizard.SelectedIndex++
		}
	}
	
	$buttonBrowse_Click = {
		$ofdSelectFile.ShowDialog()
		$textFile.Text = $ofdSelectFile.FileName
		$frmEUCBiller.Text = "End User Compute Biller - " + $ofdSelectFile.FileName
		
	}
	
	$buttonFinish_Click = {
		#-------------------------------------------------------
		# TODO: Place finalization script here
		#-------------------------------------------------------
		$sfdExportXls.ShowDialog()
	}
	
	#endregion
	
	#------------------------------------------------------
	# NOTE: When a Control State changes you should call
	# 		Update-NavButtons to trigger validation
	#------------------------------------------------------
	
	<#$textboxName_TextChanged={
		Update-NavButtons
	}#>
	
	
	$textFile_TextChanged={
		Update-NavButtons
		
	}
	
	
	
	$chkUseDates_CheckedChanged={
		#TODO: Place custom script here
		Update-NavButtons
	}
	
	$richtextbox1_TextChanged = {
		#TODO: Place custom script here
		Update-NavButtons
	}
	
	function Load-File
	{
		param ($infile)
		
		$bill = @()
		
		$begin = $dateStartBill.Value.Date
		$end = $dateEndBill.Value.Date
		
		$bill = Import-Csv $infile | where{
			$_.disabled -ne $true -and
			$_.'Last Logon Date' -ne " " -and
			($_.'Last Logon Date' -as [DateTime]) -ge $begin -and
			($_.'Last Logon Date' -as [DateTime]) -le $end
		}
		Write-Host "All = " $bill.Length
		return $bill
	}
	
	function Process-Data
	{
		param ($billData)
		
		Write-Host "All = " $billData.Length
		
		$billResources = @()
		$billServiceAccounts = @()
		$billASGStaff = @()
		$billBase = @()
		$billStandard = @()
		$billPremium = @()
		$billVIP = @()
		$billsharedMB = @()
		
		foreach ($element in $billData)
		{
			if ($element.'Distinguished Name' -like "*resources*")
			{
				$billResources += $element
			}
			
			elseif ($element.'Distinguished Name' -like "*serviceaccounts*")
			{
				$billServiceAccounts += $element
			}
			
			elseif ($element.'Distinguished Name' -like "*asg staff*")
			{
				$billASGStaff += $element
			}
			elseif ($element.'Mailbox Store' -like "*resources*" -or $element.'Mailbox Store' -like "*shared*" -or $element.'Mailbox Store' -like "*journal*")
			{
				$billSharedMB += $element
			}
			else
			{
				$billBase += $element
			}
			
		}
		$richtextbox1.Text = "Total $(@($billData.Length)) `r`nBase($($billBase.Length)) `r`nResource Accounts($($billResources.Length)) `r`nService Accounts($($billServiceAccounts.Length)) `r`nASG Staff($($billASGStaff.Length)) `r`nShared Mailbox($($billSharedMB.Length))"
		$richtextbox1.Refresh()
		#$frmMain.Refresh()
		Write-Host "Resources= " $billResources.Length
		Write-Host "Service Accounts = " $billServiceAccounts.Length
		Write-Host "ASG Staff = " $billASGStaff.Length
		Write-Host "Base = " $billBase.Length
		Write-Host "SharedMB = " $billSharedMB.Length
		
		
		
		<#foreach ($item in $billCSV)
		{
			if ($item.'Last Logon Date' -ne " ")
			{
				$t = $item.'Last Logon Date' -as [DateTime]
				$tt = [DateTime]$t
				Write-Host $item.Name $tt.Day $tt.Month $tt.Year
			}
		}#>
		
	}#Process-Data
	
	
	$sfdExportXls_FileOk=[System.ComponentModel.CancelEventHandler]{
	#Event Argument: $_ = [System.ComponentModel.CancelEventArgs]
		#TODO: Place custom script here
		
	}
	
	# --End User Generated Script--
	#----------------------------------------------
	#region Generated Events
	#----------------------------------------------
	
	$Form_StateCorrection_Load=
	{
		#Correct the initial state of the form to prevent the .Net maximized form issue
		$frmEUCBiller.WindowState = $InitialFormWindowState
	}
	
	$Form_Cleanup_FormClosed=
	{
		#Remove all event handlers from the controls
		try
		{
			$buttonBack.remove_Click($buttonBack_Click)
			$buttonFinish.remove_Click($buttonFinish_Click)
			$textFile.remove_TextChanged($textFile_TextChanged)
			$buttonBrowse.remove_Click($buttonBrowse_Click)
			$chkUseDates.remove_CheckedChanged($chkUseDates_CheckedChanged)
			$richtextbox1.remove_TextChanged($richtextbox1_TextChanged)
			$tabcontrolWizard.remove_Selecting($tabcontrolWizard_Selecting)
			$tabcontrolWizard.remove_Deselecting($tabcontrolWizard_Deselecting)
			$buttonNext.remove_Click($buttonNext_Click)
			$frmEUCBiller.remove_Load($frmEUCBiller_Load)
			$sfdExportXls.remove_FileOk($sfdExportXls_FileOk)
			$frmEUCBiller.remove_Load($Form_StateCorrection_Load)
			$frmEUCBiller.remove_FormClosed($Form_Cleanup_FormClosed)
		}
		catch [Exception]
		{ }
	}
	#endregion Generated Events

	#----------------------------------------------
	#region Generated Form Code
	#----------------------------------------------
	$frmEUCBiller.SuspendLayout()
	$tabcontrolWizard.SuspendLayout()
	$tabpageCSVFile.SuspendLayout()
	$tabpageBillPeriod.SuspendLayout()
	$tabpageBillData.SuspendLayout()
	#
	# frmEUCBiller
	#
	$frmEUCBiller.Controls.Add($buttonCancel)
	$frmEUCBiller.Controls.Add($buttonBack)
	$frmEUCBiller.Controls.Add($buttonFinish)
	$frmEUCBiller.Controls.Add($tabcontrolWizard)
	$frmEUCBiller.Controls.Add($buttonNext)
	$frmEUCBiller.AcceptButton = $buttonFinish
	$frmEUCBiller.CancelButton = $buttonCancel
	$frmEUCBiller.ClientSize = '648, 658'
	$frmEUCBiller.FormBorderStyle = 'FixedDialog'
	$frmEUCBiller.MaximizeBox = $False
	$frmEUCBiller.Name = "frmEUCBiller"
	$frmEUCBiller.StartPosition = 'CenterScreen'
	$frmEUCBiller.Text = "End User Compute Biller"
	$frmEUCBiller.add_Load($frmEUCBiller_Load)
	#
	# buttonCancel
	#
	$buttonCancel.Anchor = 'Bottom, Right'
	$buttonCancel.DialogResult = 'Cancel'
	$buttonCancel.Location = '480, 623'
	$buttonCancel.Name = "buttonCancel"
	$buttonCancel.Size = '75, 23'
	$buttonCancel.TabIndex = 4
	$buttonCancel.Text = "&Cancel"
	$buttonCancel.UseVisualStyleBackColor = $True
	#
	# buttonBack
	#
	$buttonBack.Anchor = 'Bottom, Left'
	$buttonBack.Location = '13, 623'
	$buttonBack.Name = "buttonBack"
	$buttonBack.Size = '75, 23'
	$buttonBack.TabIndex = 1
	$buttonBack.Text = "< &Back"
	$buttonBack.UseVisualStyleBackColor = $True
	$buttonBack.add_Click($buttonBack_Click)
	#
	# buttonFinish
	#
	$buttonFinish.Anchor = 'Bottom, Right'
	$buttonFinish.DialogResult = 'OK'
	$buttonFinish.Location = '561, 623'
	$buttonFinish.Name = "buttonFinish"
	$buttonFinish.Size = '75, 23'
	$buttonFinish.TabIndex = 3
	$buttonFinish.Text = "&Finish"
	$buttonFinish.UseVisualStyleBackColor = $True
	$buttonFinish.add_Click($buttonFinish_Click)
	#
	# tabcontrolWizard
	#
	$tabcontrolWizard.Controls.Add($tabpageCSVFile)
	$tabcontrolWizard.Controls.Add($tabpageBillPeriod)
	$tabcontrolWizard.Controls.Add($tabpageBillData)
	$tabcontrolWizard.Anchor = 'Top, Bottom, Left, Right'
	$tabcontrolWizard.Location = '13, 12'
	$tabcontrolWizard.Name = "tabcontrolWizard"
	$tabcontrolWizard.SelectedIndex = 0
	$tabcontrolWizard.Size = '623, 605'
	$tabcontrolWizard.TabIndex = 0
	$tabcontrolWizard.add_Selecting($tabcontrolWizard_Selecting)
	$tabcontrolWizard.add_Deselecting($tabcontrolWizard_Deselecting)
	#
	# tabpageCSVFile
	#
	$tabpageCSVFile.Controls.Add($textFile)
	$tabpageCSVFile.Controls.Add($buttonBrowse)
	$tabpageCSVFile.Controls.Add($labelSelectCSVFile)
	$tabpageCSVFile.Location = '4, 26'
	$tabpageCSVFile.Name = "tabpageCSVFile"
	$tabpageCSVFile.Padding = '3, 3, 3, 3'
	$tabpageCSVFile.Size = '615, 575'
	$tabpageCSVFile.TabIndex = 0
	$tabpageCSVFile.Text = "Select CSV"
	$tabpageCSVFile.UseVisualStyleBackColor = $True
	#
	# textFile
	#
	$textFile.Location = '105, 101'
	$textFile.Name = "textFile"
	$textFile.Size = '469, 23'
	$textFile.TabIndex = 3
	$textFile.add_TextChanged($textFile_TextChanged)
	#
	# buttonBrowse
	#
	$buttonBrowse.Location = '9, 101'
	$buttonBrowse.Name = "buttonBrowse"
	$buttonBrowse.Size = '75, 23'
	$buttonBrowse.TabIndex = 2
	$buttonBrowse.Text = "Browse"
	$buttonBrowse.UseVisualStyleBackColor = $True
	$buttonBrowse.add_Click($buttonBrowse_Click)
	#
	# labelSelectCSVFile
	#
	$labelSelectCSVFile.AutoSize = $True
	$labelSelectCSVFile.Location = '9, 52'
	$labelSelectCSVFile.Name = "labelSelectCSVFile"
	$labelSelectCSVFile.Size = '100, 17'
	$labelSelectCSVFile.TabIndex = 0
	$labelSelectCSVFile.Text = "Select CSV file"
	#
	# tabpageBillPeriod
	#
	$tabpageBillPeriod.Controls.Add($lblBillEnd)
	$tabpageBillPeriod.Controls.Add($lblBillStart)
	$tabpageBillPeriod.Controls.Add($dateEndBill)
	$tabpageBillPeriod.Controls.Add($dateStartBill)
	$tabpageBillPeriod.Controls.Add($chkUseDates)
	$tabpageBillPeriod.Location = '4, 25'
	$tabpageBillPeriod.Name = "tabpageBillPeriod"
	$tabpageBillPeriod.Padding = '3, 3, 3, 3'
	$tabpageBillPeriod.Size = '615, 576'
	$tabpageBillPeriod.TabIndex = 1
	$tabpageBillPeriod.Text = "Bill Period"
	$tabpageBillPeriod.UseVisualStyleBackColor = $True
	#
	# lblBillEnd
	#
	$lblBillEnd.Location = '161, 158'
	$lblBillEnd.Name = "lblBillEnd"
	$lblBillEnd.Size = '100, 23'
	$lblBillEnd.TabIndex = 9
	$lblBillEnd.Text = "Bill End"
	#
	# lblBillStart
	#
	$lblBillStart.Location = '161, 83'
	$lblBillStart.Name = "lblBillStart"
	$lblBillStart.Size = '100, 23'
	$lblBillStart.TabIndex = 8
	$lblBillStart.Text = "Billl Start"
	#
	# dateEndBill
	#
	$dateEndBill.Location = '161, 184'
	$dateEndBill.Name = "dateEndBill"
	$dateEndBill.Size = '281, 23'
	$dateEndBill.TabIndex = 7
	#
	# dateStartBill
	#
	$dateStartBill.Location = '161, 109'
	$dateStartBill.Name = "dateStartBill"
	$dateStartBill.Size = '281, 23'
	$dateStartBill.TabIndex = 6
	#
	# chkUseDates
	#
	$chkUseDates.CheckAlign = 'MiddleRight'
	$chkUseDates.Location = '189, 243'
	$chkUseDates.Name = "chkUseDates"
	$chkUseDates.Size = '238, 24'
	$chkUseDates.TabIndex = 5
	$chkUseDates.Text = "Use these dates?"
	$chkUseDates.TextAlign = 'MiddleCenter'
	$chkUseDates.UseVisualStyleBackColor = $True
	$chkUseDates.add_CheckedChanged($chkUseDates_CheckedChanged)
	#
	# tabpageBillData
	#
	$tabpageBillData.Controls.Add($lblFinish)
	$tabpageBillData.Controls.Add($richtextbox1)
	$tabpageBillData.Location = '4, 25'
	$tabpageBillData.Name = "tabpageBillData"
	$tabpageBillData.Size = '615, 576'
	$tabpageBillData.TabIndex = 2
	$tabpageBillData.Text = "Bill Data"
	$tabpageBillData.UseVisualStyleBackColor = $True
	#
	# lblFinish
	#
	$lblFinish.Location = '354, 359'
	$lblFinish.Name = "lblFinish"
	$lblFinish.Size = '226, 23'
	$lblFinish.TabIndex = 2
	$lblFinish.Text = "Press Finish to export to Excel"
	#
	# richtextbox1
	#
	$richtextbox1.Location = '21, 22'
	$richtextbox1.Name = "richtextbox1"
	$richtextbox1.Size = '559, 324'
	$richtextbox1.TabIndex = 1
	$richtextbox1.Text = ""
	$richtextbox1.add_TextChanged($richtextbox1_TextChanged)
	#
	# buttonNext
	#
	$buttonNext.Anchor = 'Bottom, Right'
	$buttonNext.Location = '399, 623'
	$buttonNext.Name = "buttonNext"
	$buttonNext.Size = '75, 23'
	$buttonNext.TabIndex = 2
	$buttonNext.Text = "&Next >"
	$buttonNext.UseVisualStyleBackColor = $True
	$buttonNext.add_Click($buttonNext_Click)
	#
	# ofdSelectFile
	#
	$ofdSelectFile.Filter = "csv file|*.csv"
	$ofdSelectFile.Title = "End User Compute - Open csv"
	#
	# sfdExportXls
	#
	$sfdExportXls.DefaultExt = "*.xls"
	$sfdExportXls.SupportMultiDottedExtensions = $True
	$sfdExportXls.Title = "End User Compute - Write xls"
	$sfdExportXls.add_FileOk($sfdExportXls_FileOk)
	$tabpageBillData.ResumeLayout()
	$tabpageBillPeriod.ResumeLayout()
	$tabpageCSVFile.ResumeLayout()
	$tabcontrolWizard.ResumeLayout()
	$frmEUCBiller.ResumeLayout()
	#endregion Generated Form Code

	#----------------------------------------------

	#Save the initial state of the form
	$InitialFormWindowState = $frmEUCBiller.WindowState
	#Init the OnLoad event to correct the initial state of the form
	$frmEUCBiller.add_Load($Form_StateCorrection_Load)
	#Clean up the control events
	$frmEUCBiller.add_FormClosed($Form_Cleanup_FormClosed)
	#Show the Form
	return $frmEUCBiller.ShowDialog()

} #End Function

#Call OnApplicationLoad to initialize
if((OnApplicationLoad) -eq $true)
{
	#Call the form
	Call-EUCBiller_psf | Out-Null
	#Perform cleanup
	OnApplicationExit
}
